1:1-1:1::Data.ByteString.Builder.Prim.Internal.$trModule :: "GHC.Types.Module"
106:1-106:6::Data.ByteString.Builder.Prim.Internal.>$< :: "forall a b c .\n(Data.ByteString.Builder.Prim.Internal.Contravariant<[]> a) =>\n(b -> c) -> a c -> a b"
109:10-109:33::Data.ByteString.Builder.Prim.Internal.$fContravariantFixedPrim :: "(Data.ByteString.Builder.Prim.Internal.Contravariant Data.ByteString.Builder.Prim.Internal.FixedPrim)"
110:5-110:14::$ccontramap :: "forall a b .\n(a -> b) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim b) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim a)"
112:10-112:35::Data.ByteString.Builder.Prim.Internal.$fContravariantBoundedPrim :: "(Data.ByteString.Builder.Prim.Internal.Contravariant Data.ByteString.Builder.Prim.Internal.BoundedPrim)"
113:5-113:14::$ccontramap :: "forall a b .\n(a -> b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
120:10-120:28::Data.ByteString.Builder.Prim.Internal.$fMonoidalFixedPrim :: "(Data.ByteString.Builder.Prim.Internal.Monoidal Data.ByteString.Builder.Prim.Internal.FixedPrim)"
121:5-121:9::$cpair :: "forall a b .\nx1:(Data.ByteString.Builder.Prim.Internal.FixedPrim a) -> x2:(Data.ByteString.Builder.Prim.Internal.FixedPrim b) -> {v : (Data.ByteString.Builder.Prim.Internal.FixedPrim (a, b)) | size v == size x1 + size x2}"
123:10-123:30::Data.ByteString.Builder.Prim.Internal.$fMonoidalBoundedPrim :: "(Data.ByteString.Builder.Prim.Internal.Monoidal Data.ByteString.Builder.Prim.Internal.BoundedPrim)"
124:5-124:9::$cpair :: "forall a b .\n(Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim (a, b))"
140:1-140:6::Data.ByteString.Builder.Prim.Internal.>*< :: "forall a b c .\n(Data.ByteString.Builder.Prim.Internal.Monoidal<[]> a) =>\na b -> a c -> a (b, c)"
165:1-165:10::Data.ByteString.Builder.Prim.Internal.fixedPrim :: "forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> (a -> {VV : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen VV\n                                                                                && x1 <= plen VV} -> (GHC.Types.IO ())) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim a)"
171:1-171:5::Data.ByteString.Builder.Prim.Internal.size :: "forall a .\nx1:(Data.ByteString.Builder.Prim.Internal.FixedPrim a) -> {VV : GHC.Types.Int | VV == size x1}"
171:17-171:18::l :: "{v : GHC.Types.Int | v == l\n                     && v >= 0}"
177:1-177:5::Data.ByteString.Builder.Prim.Internal.runF :: "forall a .\nx1:(Data.ByteString.Builder.Prim.Internal.FixedPrim a) -> a -> {VV : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen VV\n                                                                                                    && size x1 <= plen VV} -> (GHC.Types.IO ())"
177:18-177:20::io :: "a -> {v : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen v} -> (GHC.Types.IO ())"
182:1-182:7::Data.ByteString.Builder.Prim.Internal.emptyF :: "forall a . (Data.ByteString.Builder.Prim.Internal.FixedPrim a)"
182:13-182:14::lq_anf$##7205759403792804608 :: "GHC.Types.Int"
182:15-182:34::_ :: "(GHC.Types.IO ())"
182:31-182:33::GHC.Tuple.() :: "{v : () | v == ()}"
188:1-188:6::Data.ByteString.Builder.Prim.Internal.pairF :: "forall a b .\nx1:(Data.ByteString.Builder.Prim.Internal.FixedPrim a) -> x2:(Data.ByteString.Builder.Prim.Internal.FixedPrim b) -> {fpab : (Data.ByteString.Builder.Prim.Internal.FixedPrim (a, b)) | size fpab == size x1 + size x2}"
189:5-189:72::lq_anf$##7205759403792804617 :: "(a, b) -> {VV : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen VV\n                                               && l1 <= plen VV\n                                               && l2 <= plen VV} -> (GHC.Types.IO ())"
189:8-189:17::lq_anf$##7205759403792804612 :: "{v : GHC.Types.Int | v == l1 + l2}"
189:9-189:11::l1 :: "{v : GHC.Types.Int | v == l1\n                     && v >= 0}"
189:14-189:16::l2 :: "{v : GHC.Types.Int | v == l2\n                     && v >= 0}"
189:18-189:72::lq_anf$##7205759403792804613 :: "(a, b)"
189:28-189:30::op :: "{VV : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen VV\n                                     && l1 <= plen VV\n                                     && l2 <= plen VV}"
189:34-189:43::lq_anf$##7205759403792804614 :: "(GHC.Types.IO ())"
189:38-189:40::x1 :: "{VV : a | VV == x1}"
189:41-189:43::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op\n                                    && 0 <= plen v\n                                    && l1 <= plen v\n                                    && l2 <= plen v}"
189:47-189:71::lq_anf$##7205759403792804616 :: "(GHC.Types.IO ())"
189:51-189:53::x2 :: "{VV : a | VV == x2}"
189:54-189:71::lq_anf$##7205759403792804615 :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | pbase v == pbase op\n                                    && plen v == plen op - l1\n                                    && 0 <= plen v}"
189:55-189:57::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op\n                                    && 0 <= plen v\n                                    && l1 <= plen v\n                                    && l2 <= plen v}"
189:68-189:70::l1 :: "{v : GHC.Types.Int | v == l1\n                     && v >= 0}"
202:1-202:11::Data.ByteString.Builder.Prim.Internal.contramapF :: "forall a b .\n(a -> b) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim b) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim a)"
202:12-202:13::f :: "a -> b"
202:26-202:39::Data.ByteString.Builder.Prim.Internal.FP :: "{VV : forall a .\n      x1:{v : GHC.Types.Int | v >= 0} -> (a -> {v : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen v\n                                                                                   && x1 <= plen v} -> (GHC.Types.IO ())) -> {v : (Data.ByteString.Builder.Prim.Internal.FixedPrim a) | fpSize v == x1\n                                                                                                                                                                                        && size v == x1} | VV == FP}"
202:29-202:30::l :: "{v : GHC.Types.Int | v == l\n                     && v >= 0}"
202:31-202:39::lq_anf$##7205759403792804619 :: "a -> {v : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen v\n                                         && l <= plen v} -> (GHC.Types.IO ())"
202:32-202:34::io :: "a -> {v : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen v\n                                         && l <= plen v} -> (GHC.Types.IO ())"
202:37-202:38::f :: "a -> b"
207:1-207:4::Data.ByteString.Builder.Prim.Internal.toB :: "forall a .\n(Data.ByteString.Builder.Prim.Internal.FixedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
207:17-207:70::lq_anf$##7205759403792804625 :: "a -> {VV : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen VV\n                                          && l <= plen VV} -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
207:20-207:21::l :: "{v : GHC.Types.Int | v == l\n                     && v >= 0}"
207:22-207:70::GHC.Base.$fMonadIO :: "{v : (GHC.Base.Monad GHC.Types.IO) | v == $fMonadIO}"
207:24-207:25::x :: "a"
207:26-207:28::op :: "{VV : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen VV\n                                     && l <= plen VV}"
207:32-207:39::lq_anf$##7205759403792804621 :: "(GHC.Types.IO ())"
207:35-207:36::x :: "{VV : a | VV == x}"
207:37-207:39::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op\n                                    && 0 <= plen v\n                                    && l <= plen v}"
207:43-207:69::lq_anf$##7205759403792804624 :: "(GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
207:44-207:50::_ :: "forall a . a -> (GHC.Types.IO a)"
207:54-207:56::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op\n                                    && 0 <= plen v\n                                    && l <= plen v}"
207:67-207:68::l :: "{v : GHC.Types.Int | v == l\n                     && v >= 0}"
212:1-212:19::Data.ByteString.Builder.Prim.Internal.liftFixedToBounded :: "forall a .\n(Data.ByteString.Builder.Prim.Internal.FixedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
222:1-222:12::Data.ByteString.Builder.Prim.Internal.storableToF :: "forall a .\n(Foreign.Storable.Storable<[]> a) =>\n(Data.ByteString.Builder.Prim.Internal.FixedPrim a)"
222:15-222:43::ds_d2PA :: "a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO ())"
222:18-222:43::lq_anf$##7205759403792804693 :: "GHC.Types.Int"
222:26-222:42::lq_anf$##7205759403792804692 :: "a"
222:47-222:48::x :: "a"
222:49-222:51::op :: "{VV : (GHC.Ptr.Ptr GHC.Word.Word8) | false}"
223:8-223:23::lq_anf$##7205759403792804694 :: "Foreign.Ptr.WordPtr"
223:21-223:23::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | false}"
223:30-223:71::lq_anf$##7205759403792804697 :: "Foreign.Ptr.WordPtr"
223:43-223:71::lq_anf$##7205759403792804696 :: "GHC.Types.Int"
223:54-223:70::lq_anf$##7205759403792804695 :: "a"
223:75-223:76::lq_anf$##7205759403792804700 :: "Foreign.Ptr.WordPtr"
223:82-223:101::$dStorable_a1Sn :: "{v : (Foreign.Storable.Storable a) | v == $dStorable_a1Sn}"
223:87-223:99::lq_anf$##7205759403792804707 :: "{v : (GHC.Ptr.Ptr a) | plen v == plen op\n                       && 0 <= plen v}"
223:96-223:98::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | false}"
223:100-223:101::x :: "{VV : a | VV == x}"
224:10-224:16::_ :: "((GHC.Ptr.Ptr a) -> (GHC.Types.IO ())) -> (GHC.Types.IO ())"
224:15-224:16::x :: "{VV : a | VV == x}"
224:19-224:77::Foreign.Marshal.Utils.copyBytes :: "{VV : forall a .\n      (GHC.Ptr.Ptr a) -> (GHC.Ptr.Ptr a) -> GHC.Types.Int -> (GHC.Types.IO ()) | VV == copyBytes}"
224:20-224:22::tp :: "{VV : (GHC.Ptr.Ptr a) | false}"
224:36-224:38::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | false}"
224:39-224:51::lq_anf$##7205759403792804703 :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | plen v == plen tp\n                                    && 0 <= plen v}"
224:48-224:50::tp :: "{v : (GHC.Ptr.Ptr a) | false}"
224:52-224:77::lq_anf$##7205759403792804705 :: "GHC.Types.Int"
224:60-224:76::lq_anf$##7205759403792804704 :: "a"
252:1-252:10::Data.ByteString.Builder.Prim.Internal.sizeBound :: "forall a .\nx1:(Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> {VV : GHC.Types.Int | VV == sizeBound x1}"
252:22-252:23::b :: "{v : GHC.Types.Int | v == b\n                     && v >= 0}"
257:1-257:12::Data.ByteString.Builder.Prim.Internal.boundedPrim :: "forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> (a -> x4:{VV : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen VV\n                                                                                   && x1 <= plen VV} -> (GHC.Types.IO {VV : (GHC.Ptr.Ptr GHC.Word.Word8) | plen VV >= plen x4 - x1\n                                                                                                                                                           && 0 <= plen VV})) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
266:1-266:5::Data.ByteString.Builder.Prim.Internal.runB :: "forall a .\nx1:(Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> a -> x3:{VV : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen VV\n                                                                                                         && sizeBound x1 <= plen VV} -> (GHC.Types.IO {VV : (GHC.Ptr.Ptr GHC.Word.Word8) | plen VV >= plen x3 - sizeBound x1\n                                                                                                                                                                                           && 0 <= plen VV})"
266:18-266:20::io :: "a -> {v : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen v} -> (GHC.Types.IO {v : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen v})"
279:1-279:11::Data.ByteString.Builder.Prim.Internal.contramapB :: "forall a b .\n(a -> b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
279:12-279:13::f :: "a -> b"
279:26-279:39::Data.ByteString.Builder.Prim.Internal.BP :: "{VV : forall a .\n      x1:{v : GHC.Types.Int | v >= 0} -> (a -> x4:{v : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen v\n                                                                                      && x1 <= plen v} -> (GHC.Types.IO {v : (GHC.Ptr.Ptr GHC.Word.Word8) | plen v >= plen x4 - x1\n                                                                                                                                                            && 0 <= plen v})) -> {v : (Data.ByteString.Builder.Prim.Internal.BoundedPrim a) | bpSize v == x1\n                                                                                                                                                                                                                                              && sizeBound v == x1} | VV == BP}"
279:29-279:30::b :: "{v : GHC.Types.Int | v == b\n                     && v >= 0}"
279:31-279:39::lq_anf$##7205759403792804712 :: "a -> x1:{v : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen v\n                                            && b <= plen v} -> (GHC.Types.IO {v : (GHC.Ptr.Ptr GHC.Word.Word8) | plen v >= plen x1 - b\n                                                                                                                 && 0 <= plen v})"
279:32-279:34::io :: "a -> x2:{v : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen v\n                                            && b <= plen v} -> (GHC.Types.IO {v : (GHC.Ptr.Ptr GHC.Word.Word8) | plen v >= plen x2 - b\n                                                                                                                 && 0 <= plen v})"
279:37-279:38::f :: "a -> b"
284:1-284:7::Data.ByteString.Builder.Prim.Internal.emptyB :: "forall a . (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
284:13-284:14::lq_anf$##7205759403792804714 :: "GHC.Types.Int"
284:15-284:35::_ :: "(GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
284:19-284:21::op :: "{VV : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen VV}"
284:32-284:34::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op\n                                    && 0 <= plen v}"
289:1-289:6::Data.ByteString.Builder.Prim.Internal.pairB :: "forall a b .\n(Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim (a, b))"
290:5-290:55::lq_anf$##7205759403792804722 :: "(a, b) -> {VV : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen VV\n                                               && b1 <= plen VV\n                                               && b2 <= plen VV} -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
290:8-290:17::lq_anf$##7205759403792804718 :: "{v : GHC.Types.Int | v == b1 + b2}"
290:9-290:11::b1 :: "{v : GHC.Types.Int | v == b1\n                     && v >= 0}"
290:14-290:16::b2 :: "{v : GHC.Types.Int | v == b2\n                     && v >= 0}"
290:18-290:55::lq_anf$##7205759403792804719 :: "(a, b)"
290:28-290:30::op :: "{VV : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen VV\n                                     && b1 <= plen VV\n                                     && b2 <= plen VV}"
290:34-290:43::lq_anf$##7205759403792804720 :: "(GHC.Types.IO {v : (GHC.Ptr.Ptr GHC.Word.Word8) | plen v >= plen op - b1\n                                                  && 0 <= plen v})"
290:38-290:40::x1 :: "{VV : a | VV == x1}"
290:41-290:43::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op\n                                    && 0 <= plen v\n                                    && b1 <= plen v\n                                    && b2 <= plen v}"
290:48-290:54::lq_anf$##7205759403792804721 :: "x1:{v : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen v\n                                       && b2 <= plen v} -> (GHC.Types.IO {v : (GHC.Ptr.Ptr GHC.Word.Word8) | plen v >= plen x1 - b2\n                                                                                                             && 0 <= plen v})"
290:52-290:54::x2 :: "{VV : a | VV == x2}"
305:1-305:8::Data.ByteString.Builder.Prim.Internal.eitherB :: "forall a b .\n(Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim (Data.Either.Either a b))"
306:8-306:19::lq_anf$##7205759403792804725 :: "{v : GHC.Types.Int | v == (if b1 > b2 then b1 else b2)\n                     && v >= 0}"
306:13-306:15::b1 :: "{v : GHC.Types.Int | v == b1\n                     && v >= 0}"
306:16-306:18::b2 :: "{v : GHC.Types.Int | v == b2\n                     && v >= 0}"
307:9-307:73::lq_anf$##7205759403792804726 :: "{v : (Data.Either.Either a b) | v == x}"
307:11-307:12::x :: "(Data.Either.Either a b)"
307:13-307:15::op :: "{VV : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen VV\n                                     && b1 <= plen VV\n                                     && b2 <= plen VV}"
307:24-307:25::_ :: "{v : (Data.Either.Either a b) | v == x}"
307:40-307:49::io1 :: "a -> x2:{v : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen v\n                                            && b1 <= plen v} -> (GHC.Types.IO {v : (GHC.Ptr.Ptr GHC.Word.Word8) | plen v >= plen x2 - b1\n                                                                                                                  && 0 <= plen v})"
307:44-307:46::x1 :: "{VV : a | VV == x1}"
307:47-307:49::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op\n                                    && 0 <= plen v\n                                    && b1 <= plen v\n                                    && b2 <= plen v}"
307:63-307:72::io2 :: "a -> x2:{v : (GHC.Ptr.Ptr GHC.Word.Word8) | 0 <= plen v\n                                            && b2 <= plen v} -> (GHC.Types.IO {v : (GHC.Ptr.Ptr GHC.Word.Word8) | plen v >= plen x2 - b2\n                                                                                                                  && 0 <= plen v})"
307:67-307:69::x2 :: "{VV : a | VV == x2}"
307:70-307:72::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op\n                                    && 0 <= plen v\n                                    && b1 <= plen v\n                                    && b2 <= plen v}"
318:1-318:6::Data.ByteString.Builder.Prim.Internal.condB :: "forall a .\n(a -> GHC.Types.Bool) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
318:7-318:8::p :: "a -> GHC.Types.Bool"
318:9-318:12::be1 :: "(Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
318:13-318:16::be2 :: "(Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
319:16-319:55::lq_anf$##7205759403792804729 :: "GHC.Types.Bool"
319:18-319:19::x :: "a"
319:26-319:29::lq_anf$##7205759403792804728 :: "GHC.Types.Bool"
319:28-319:29::x :: "{VV : a | VV == x}"
319:35-319:41::Data.Either.Left :: "{VV : forall a b .\n      a -> {v : (Data.Either.Either a b) | isLeft v} | VV == Left}"
319:40-319:41::x :: "{VV : a | VV == x}"
319:47-319:54::Data.Either.Right :: "{VV : forall a b .\n      b -> {v : (Data.Either.Either a b) | not (isLeft v)} | VV == Right}"
319:53-319:54::x :: "{VV : a | VV == x}"
319:56-319:73::lq_anf$##7205759403792804731 :: "(Data.ByteString.Builder.Prim.Internal.BoundedPrim (Data.Either.Either a a))"
319:65-319:68::be1 :: "{v : (Data.ByteString.Builder.Prim.Internal.BoundedPrim a) | v == be1}"
319:69-319:72::be2 :: "{v : (Data.ByteString.Builder.Prim.Internal.BoundedPrim a) | v == be2}"