1:1-1:1::Data.ByteString.Builder.Prim.Internal.$trModule :: "GHC.Types.Module"
106:1-106:6::Data.ByteString.Builder.Prim.Internal.>$< :: "forall a b c .\n(Data.ByteString.Builder.Prim.Internal.Contravariant<[]> a) =>\n(b -> c) -> a c -> a b"
109:10-109:33::Data.ByteString.Builder.Prim.Internal.$fContravariantFixedPrim :: "(Data.ByteString.Builder.Prim.Internal.Contravariant Data.ByteString.Builder.Prim.Internal.FixedPrim)"
110:5-110:14::$ccontramap :: "forall a b .\n(a -> b) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim b) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim a)"
112:10-112:35::Data.ByteString.Builder.Prim.Internal.$fContravariantBoundedPrim :: "(Data.ByteString.Builder.Prim.Internal.Contravariant Data.ByteString.Builder.Prim.Internal.BoundedPrim)"
113:5-113:14::$ccontramap :: "forall a b .\n(a -> b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
120:10-120:28::Data.ByteString.Builder.Prim.Internal.$fMonoidalFixedPrim :: "(Data.ByteString.Builder.Prim.Internal.Monoidal Data.ByteString.Builder.Prim.Internal.FixedPrim)"
121:5-121:9::$cpair :: "forall a b .\n(Data.ByteString.Builder.Prim.Internal.FixedPrim a) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim b) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim (a, b))"
123:10-123:30::Data.ByteString.Builder.Prim.Internal.$fMonoidalBoundedPrim :: "(Data.ByteString.Builder.Prim.Internal.Monoidal Data.ByteString.Builder.Prim.Internal.BoundedPrim)"
124:5-124:9::$cpair :: "forall a b .\n(Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim (a, b))"
140:1-140:6::Data.ByteString.Builder.Prim.Internal.>*< :: "forall a b c .\n(Data.ByteString.Builder.Prim.Internal.Monoidal<[]> a) =>\na b -> a c -> a (b, c)"
156:1-156:10::Data.ByteString.Builder.Prim.Internal.fixedPrim :: "forall a .\nGHC.Types.Int -> (a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO ())) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim a)"
161:1-161:5::Data.ByteString.Builder.Prim.Internal.size :: "forall a .\n(Data.ByteString.Builder.Prim.Internal.FixedPrim a) -> GHC.Types.Int"
161:17-161:18::l :: "{v : GHC.Types.Int | v == l}"
165:1-165:5::Data.ByteString.Builder.Prim.Internal.runF :: "forall a .\n(Data.ByteString.Builder.Prim.Internal.FixedPrim a) -> a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO ())"
165:18-165:20::io :: "a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO ())"
170:1-170:7::Data.ByteString.Builder.Prim.Internal.emptyF :: "forall a . (Data.ByteString.Builder.Prim.Internal.FixedPrim a)"
170:13-170:14::lq_anf$##7205759403792804719 :: "GHC.Types.Int"
170:15-170:34::_ :: "(GHC.Types.IO ())"
170:31-170:33::GHC.Tuple.() :: "{v : () | v == ()}"
175:1-175:6::Data.ByteString.Builder.Prim.Internal.pairF :: "forall a b .\n(Data.ByteString.Builder.Prim.Internal.FixedPrim a) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim b) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim (a, b))"
176:5-176:72::lq_anf$##7205759403792804728 :: "(a, b) -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO ())"
176:8-176:17::lq_anf$##7205759403792804723 :: "{v : GHC.Types.Int | v == l1 + l2}"
176:9-176:11::l1 :: "{v : GHC.Types.Int | v == l1}"
176:14-176:16::l2 :: "{v : GHC.Types.Int | v == l2}"
176:18-176:72::lq_anf$##7205759403792804724 :: "(a, b)"
176:28-176:30::op :: "(GHC.Ptr.Ptr GHC.Word.Word8)"
176:34-176:43::lq_anf$##7205759403792804725 :: "(GHC.Types.IO ())"
176:38-176:40::x1 :: "{VV : a | VV == x1}"
176:41-176:43::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op}"
176:47-176:71::lq_anf$##7205759403792804727 :: "(GHC.Types.IO ())"
176:51-176:53::x2 :: "{VV : a | VV == x2}"
176:54-176:71::lq_anf$##7205759403792804726 :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | pbase v == pbase op\n                                    && plen v == plen op - l1\n                                    && 0 <= plen v}"
176:55-176:57::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op}"
176:68-176:70::l1 :: "{v : GHC.Types.Int | v == l1}"
189:1-189:11::Data.ByteString.Builder.Prim.Internal.contramapF :: "forall a b .\n(a -> b) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim b) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim a)"
189:12-189:13::f :: "a -> b"
189:26-189:39::Data.ByteString.Builder.Prim.Internal.$WFP :: "{VV : forall a .\n      GHC.Types.Int -> (a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO ())) -> (Data.ByteString.Builder.Prim.Internal.FixedPrim a) | VV == $WFP}"
189:29-189:30::l :: "{v : GHC.Types.Int | v == l}"
189:31-189:39::lq_anf$##7205759403792804730 :: "a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO ())"
189:32-189:34::io :: "a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO ())"
189:37-189:38::f :: "a -> b"
194:1-194:4::Data.ByteString.Builder.Prim.Internal.toB :: "forall a .\n(Data.ByteString.Builder.Prim.Internal.FixedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
194:17-194:70::lq_anf$##7205759403792804736 :: "a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
194:20-194:21::l :: "{v : GHC.Types.Int | v == l}"
194:22-194:70::GHC.Base.$fMonadIO :: "{v : (GHC.Base.Monad GHC.Types.IO) | v == $fMonadIO}"
194:24-194:25::x :: "a"
194:26-194:28::op :: "(GHC.Ptr.Ptr GHC.Word.Word8)"
194:32-194:39::lq_anf$##7205759403792804732 :: "(GHC.Types.IO ())"
194:35-194:36::x :: "{VV : a | VV == x}"
194:37-194:39::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op}"
194:43-194:69::lq_anf$##7205759403792804735 :: "(GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
194:44-194:50::_ :: "forall a . a -> (GHC.Types.IO a)"
194:54-194:56::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op}"
194:67-194:68::l :: "{v : GHC.Types.Int | v == l}"
199:1-199:19::Data.ByteString.Builder.Prim.Internal.liftFixedToBounded :: "forall a .\n(Data.ByteString.Builder.Prim.Internal.FixedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
209:1-209:12::Data.ByteString.Builder.Prim.Internal.storableToF :: "forall a .\n(Foreign.Storable.Storable<[]> a) =>\n(Data.ByteString.Builder.Prim.Internal.FixedPrim a)"
209:15-209:43::ds_d2Rn :: "a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO ())"
209:18-209:43::lq_anf$##7205759403792804804 :: "GHC.Types.Int"
209:26-209:42::lq_anf$##7205759403792804803 :: "a"
209:47-209:48::x :: "a"
209:49-209:51::op :: "{VV : (GHC.Ptr.Ptr GHC.Word.Word8) | false}"
210:8-210:23::lq_anf$##7205759403792804805 :: "Foreign.Ptr.WordPtr"
210:21-210:23::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | false}"
210:30-210:71::lq_anf$##7205759403792804808 :: "Foreign.Ptr.WordPtr"
210:43-210:71::lq_anf$##7205759403792804807 :: "GHC.Types.Int"
210:54-210:70::lq_anf$##7205759403792804806 :: "a"
210:75-210:76::lq_anf$##7205759403792804811 :: "Foreign.Ptr.WordPtr"
210:82-210:101::$dStorable_a1U0 :: "{v : (Foreign.Storable.Storable a) | v == $dStorable_a1U0}"
210:87-210:99::lq_anf$##7205759403792804818 :: "{v : (GHC.Ptr.Ptr a) | plen v == plen op\n                       && 0 <= plen v}"
210:96-210:98::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | false}"
210:100-210:101::x :: "{VV : a | VV == x}"
211:10-211:16::_ :: "((GHC.Ptr.Ptr a) -> (GHC.Types.IO ())) -> (GHC.Types.IO ())"
211:15-211:16::x :: "{VV : a | VV == x}"
211:19-211:77::Foreign.Marshal.Utils.copyBytes :: "{VV : forall a .\n      (GHC.Ptr.Ptr a) -> (GHC.Ptr.Ptr a) -> GHC.Types.Int -> (GHC.Types.IO ()) | VV == copyBytes}"
211:20-211:22::tp :: "{VV : (GHC.Ptr.Ptr a) | false}"
211:36-211:38::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | false}"
211:39-211:51::lq_anf$##7205759403792804814 :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | plen v == plen tp\n                                    && 0 <= plen v}"
211:48-211:50::tp :: "{v : (GHC.Ptr.Ptr a) | false}"
211:52-211:77::lq_anf$##7205759403792804816 :: "GHC.Types.Int"
211:60-211:76::lq_anf$##7205759403792804815 :: "a"
231:1-231:10::Data.ByteString.Builder.Prim.Internal.sizeBound :: "forall a .\n(Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> GHC.Types.Int"
231:22-231:23::b :: "{v : GHC.Types.Int | v == b}"
235:1-235:12::Data.ByteString.Builder.Prim.Internal.boundedPrim :: "forall a .\nGHC.Types.Int -> (a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
239:1-239:11::Data.ByteString.Builder.Prim.Internal.boudedPrim :: "forall a .\nGHC.Types.Int -> (a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
243:1-243:5::Data.ByteString.Builder.Prim.Internal.runB :: "forall a .\n(Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
243:18-243:20::io :: "a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
256:1-256:11::Data.ByteString.Builder.Prim.Internal.contramapB :: "forall a b .\n(a -> b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
256:12-256:13::f :: "a -> b"
256:26-256:39::Data.ByteString.Builder.Prim.Internal.$WBP :: "{VV : forall a .\n      GHC.Types.Int -> (a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a) | VV == $WBP}"
256:29-256:30::b :: "{v : GHC.Types.Int | v == b}"
256:31-256:39::lq_anf$##7205759403792804823 :: "a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
256:32-256:34::io :: "a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
256:37-256:38::f :: "a -> b"
261:1-261:7::Data.ByteString.Builder.Prim.Internal.emptyB :: "forall a . (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
261:13-261:14::lq_anf$##7205759403792804825 :: "GHC.Types.Int"
261:15-261:35::_ :: "(GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
261:19-261:21::op :: "(GHC.Ptr.Ptr GHC.Word.Word8)"
261:32-261:34::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op}"
266:1-266:6::Data.ByteString.Builder.Prim.Internal.pairB :: "forall a b .\n(Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim (a, b))"
267:5-267:55::lq_anf$##7205759403792804833 :: "(a, b) -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
267:8-267:17::lq_anf$##7205759403792804829 :: "{v : GHC.Types.Int | v == b1 + b2}"
267:9-267:11::b1 :: "{v : GHC.Types.Int | v == b1}"
267:14-267:16::b2 :: "{v : GHC.Types.Int | v == b2}"
267:18-267:55::lq_anf$##7205759403792804830 :: "(a, b)"
267:28-267:30::op :: "(GHC.Ptr.Ptr GHC.Word.Word8)"
267:34-267:43::lq_anf$##7205759403792804831 :: "(GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
267:38-267:40::x1 :: "{VV : a | VV == x1}"
267:41-267:43::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op}"
267:48-267:54::lq_anf$##7205759403792804832 :: "(GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
267:52-267:54::x2 :: "{VV : a | VV == x2}"
282:1-282:8::Data.ByteString.Builder.Prim.Internal.eitherB :: "forall a b .\n(Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim b) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim (Data.Either.Either a b))"
283:8-283:19::lq_anf$##7205759403792804836 :: "{v : GHC.Types.Int | v == (if b1 > b2 then b1 else b2)}"
283:13-283:15::b1 :: "{v : GHC.Types.Int | v == b1}"
283:16-283:18::b2 :: "{v : GHC.Types.Int | v == b2}"
284:9-284:73::lq_anf$##7205759403792804837 :: "{v : (Data.Either.Either a b) | v == x}"
284:11-284:12::x :: "(Data.Either.Either a b)"
284:13-284:15::op :: "(GHC.Ptr.Ptr GHC.Word.Word8)"
284:24-284:25::_ :: "{v : (Data.Either.Either a b) | v == x}"
284:40-284:49::io1 :: "a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
284:44-284:46::x1 :: "{VV : a | VV == x1}"
284:47-284:49::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op}"
284:63-284:72::io2 :: "a -> (GHC.Ptr.Ptr GHC.Word.Word8) -> (GHC.Types.IO (GHC.Ptr.Ptr GHC.Word.Word8))"
284:67-284:69::x2 :: "{VV : a | VV == x2}"
284:70-284:72::op :: "{v : (GHC.Ptr.Ptr GHC.Word.Word8) | v == op}"
295:1-295:6::Data.ByteString.Builder.Prim.Internal.condB :: "forall a .\n(a -> GHC.Types.Bool) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a) -> (Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
295:7-295:8::p :: "a -> GHC.Types.Bool"
295:9-295:12::be1 :: "(Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
295:13-295:16::be2 :: "(Data.ByteString.Builder.Prim.Internal.BoundedPrim a)"
296:16-296:55::lq_anf$##7205759403792804840 :: "GHC.Types.Bool"
296:18-296:19::x :: "a"
296:26-296:29::lq_anf$##7205759403792804839 :: "GHC.Types.Bool"
296:28-296:29::x :: "{VV : a | VV == x}"
296:35-296:41::Data.Either.Left :: "{VV : forall a b .\n      a -> {v : (Data.Either.Either a b) | isLeft v} | VV == Left}"
296:40-296:41::x :: "{VV : a | VV == x}"
296:47-296:54::Data.Either.Right :: "{VV : forall a b .\n      b -> {v : (Data.Either.Either a b) | not (isLeft v)} | VV == Right}"
296:53-296:54::x :: "{VV : a | VV == x}"
296:56-296:73::lq_anf$##7205759403792804842 :: "(Data.ByteString.Builder.Prim.Internal.BoundedPrim (Data.Either.Either a a))"
296:65-296:68::be1 :: "{v : (Data.ByteString.Builder.Prim.Internal.BoundedPrim a) | v == be1}"
296:69-296:72::be2 :: "{v : (Data.ByteString.Builder.Prim.Internal.BoundedPrim a) | v == be2}"
309:1-309:19::Data.ByteString.Builder.Prim.Internal.caseWordSize_32_64 :: "forall a . a -> a -> a"
309:28-309:30::_ :: "{VV : forall a . x1:a -> {VV : a | VV == x1} | VV == id}"