1:1-1:1::Data.ByteString.Builder.RealFloat.TableGenerator.$trModule :: "GHC.Types.Module"
125:1-125:24::Data.ByteString.Builder.RealFloat.TableGenerator.float_pow5_inv_bitcount :: "GHC.Types.Int"
129:1-129:20::Data.ByteString.Builder.RealFloat.TableGenerator.float_pow5_bitcount :: "GHC.Types.Int"
133:1-133:21::Data.ByteString.Builder.RealFloat.TableGenerator.double_pow5_bitcount :: "GHC.Types.Int"
137:1-137:25::Data.ByteString.Builder.RealFloat.TableGenerator.double_pow5_inv_bitcount :: "GHC.Types.Int"
144:1-144:5::Data.ByteString.Builder.RealFloat.TableGenerator.blen :: "{VV : GHC.Num.Integer.Integer | false} -> {VV : GHC.Types.Int | false}"
144:10-144:11::lq_anf$##7205759403792811401 :: "{v : GHC.Prim.Int# | v == 0}"
145:10-145:11::lq_anf$##7205759403792811400 :: "{v : GHC.Prim.Int# | v == 1}"
146:10-146:11::lq_anf$##7205759403792811396 :: "GHC.Types.Int"
146:14-146:31::lq_anf$##7205759403792811399 :: "{VV : GHC.Types.Int | false}"
146:19-146:31::lq_anf$##7205759403792811398 :: "GHC.Num.Integer.Integer"
146:20-146:21::ds_d4B1 :: "{v : GHC.Num.Integer.Integer | false}"
146:29-146:30::lq_anf$##7205759403792811397 :: "{v : GHC.Num.Integer.Integer | v == 2}"
150:1-150:5::Data.ByteString.Builder.RealFloat.TableGenerator.finv :: "GHC.Types.Int -> GHC.Types.Int -> GHC.Num.Integer.Integer"
150:6-150:14::bitcount :: "GHC.Types.Int"
150:15-150:16::i :: "GHC.Types.Int"
151:7-151:8::p :: "{v : GHC.Num.Integer.Integer | i == 0 => v == 1}"
151:11-151:12::lq_anf$##7205759403792811409 :: "{v : GHC.Num.Integer.Integer | v == 5}"
151:13-151:14::i :: "{v : GHC.Types.Int | v == i}"
152:7-152:43::lq_anf$##7205759403792811416 :: "GHC.Num.Integer.Integer"
152:8-152:9::lq_anf$##7205759403792811410 :: "{v : GHC.Num.Integer.Integer | v == 1}"
152:19-152:42::lq_anf$##7205759403792811415 :: "GHC.Types.Int"
152:20-152:26::lq_anf$##7205759403792811411 :: "{v : GHC.Types.Int | false}"
152:25-152:26::p :: "{v : GHC.Num.Integer.Integer | (i == 0 => v == 1)\n                               && v == p}"
152:29-152:30::lq_anf$##7205759403792811413 :: "GHC.Types.Int"
152:33-152:41::bitcount :: "{v : GHC.Types.Int | v == bitcount}"
152:50-152:51::p :: "{v : GHC.Num.Integer.Integer | (i == 0 => v == 1)\n                               && v == p}"
152:54-152:55::lq_anf$##7205759403792811418 :: "{v : GHC.Num.Integer.Integer | v == 1}"
156:1-156:6::Data.ByteString.Builder.RealFloat.TableGenerator.fnorm :: "GHC.Types.Int -> GHC.Types.Int -> GHC.Num.Integer.Integer"
156:7-156:15::bitcount :: "GHC.Types.Int"
156:16-156:17::i :: "GHC.Types.Int"
157:7-157:8::p :: "{v : GHC.Num.Integer.Integer | i == 0 => v == 1}"
157:11-157:12::lq_anf$##7205759403792811402 :: "{v : GHC.Num.Integer.Integer | v == 5}"
157:13-157:14::i :: "{v : GHC.Types.Int | v == i}"
158:7-158:8::s :: "GHC.Types.Int"
158:11-158:17::lq_anf$##7205759403792811403 :: "{v : GHC.Types.Int | false}"
158:16-158:17::p :: "{v : GHC.Num.Integer.Integer | (i == 0 => v == 1)\n                               && v == p}"
158:20-158:28::bitcount :: "{v : GHC.Types.Int | v == bitcount}"
159:10-159:11::s :: "{v : GHC.Types.Int | v == s}"
159:14-159:15::lq_anf$##7205759403792811405 :: "GHC.Types.Int"
159:21-159:22::p :: "{v : GHC.Num.Integer.Integer | (i == 0 => v == 1)\n                               && v == p}"
159:32-159:36::lq_anf$##7205759403792811408 :: "{v : GHC.Types.Int | v == (-s)}"
159:34-159:35::s :: "{v : GHC.Types.Int | v == s}"
159:42-159:43::p :: "{v : GHC.Num.Integer.Integer | (i == 0 => v == 1)\n                               && v == p}"
159:53-159:54::s :: "{v : GHC.Types.Int | v == s}"
163:1-163:14::Data.ByteString.Builder.RealFloat.TableGenerator.splitWord128s :: "[GHC.Num.Integer.Integer] -> [GHC.Word.Word64]"
163:15-163:17::li :: "[GHC.Num.Integer.Integer]"
164:5-164:69::lq_anf$##7205759403792811381 :: "[GHC.Word.Word64]"
164:6-164:19::lq_anf$##7205759403792811380 :: "GHC.Word.Word64"
164:18-164:19::ds_d4AZ :: "GHC.Num.Integer.Integer"
164:27-164:29::li :: "{v : [GHC.Num.Integer.Integer] | v == li\n                                 && len v >= 0}"
164:36-164:68::lq_anf$##7205759403792811388 :: "[GHC.Num.Integer.Integer]"
164:37-164:38::ds_d4AV :: "GHC.Num.Integer.Integer"
164:43-164:52::maxWord64 :: "{v : GHC.Num.Integer.Integer | v == maxWord64}"
164:54-164:55::ds_d4AV :: "GHC.Num.Integer.Integer"
164:65-164:67::lq_anf$##7205759403792811384 :: "GHC.Types.Int"
165:10-165:19::maxWord64 :: "GHC.Num.Integer.Integer"
165:22-165:52::_ :: "GHC.Num.Integer.Integer"
165:32-165:52::lq_anf$##7205759403792811377 :: "GHC.Word.Word64"
168:1-168:13::Data.ByteString.Builder.RealFloat.TableGenerator.splitWord128 :: "GHC.Num.Integer.Integer -> (GHC.Word.Word64, GHC.Word.Word64)"
168:14-168:15::x :: "GHC.Num.Integer.Integer"
168:18-168:78::GHC.Tuple.(,) :: "{VV : forall a b <p2 :: a b -> Bool>.\n      x1:a -> x2:{VV : b<p2 x1> | true} -> {v : (a, b)<\\x5 VV -> {VV : b<p2 x5> | true}> | fst v == x1\n                                                                                           && snd v == x2\n                                                                                           && x_Tuple21 v == x1\n                                                                                           && x_Tuple22 v == x2} | VV == (,)}"
168:19-168:46::lq_anf$##7205759403792811374 :: "GHC.Word.Word64"
168:31-168:46::lq_anf$##7205759403792811373 :: "GHC.Num.Integer.Integer"
168:32-168:33::x :: "{v : GHC.Num.Integer.Integer | v == x}"
168:43-168:45::lq_anf$##7205759403792811372 :: "GHC.Types.Int"
168:48-168:77::lq_anf$##7205759403792811376 :: "GHC.Word.Word64"
168:60-168:77::lq_anf$##7205759403792811375 :: "GHC.Num.Integer.Integer"
168:61-168:62::x :: "{v : GHC.Num.Integer.Integer | v == x}"
168:67-168:76::maxWord64 :: "{v : GHC.Num.Integer.Integer | v == maxWord64}"
169:10-169:19::maxWord64 :: "GHC.Num.Integer.Integer"
169:22-169:52::_ :: "GHC.Num.Integer.Integer"
169:32-169:52::lq_anf$##7205759403792811370 :: "GHC.Word.Word64"
175:1-175:7::Data.ByteString.Builder.RealFloat.TableGenerator.case64 :: "(GHC.Types.Int -> GHC.Num.Integer.Integer) -> [GHC.Types.Int] -> [GHC.Types.Char]"
175:8-175:9::f :: "GHC.Types.Int -> GHC.Num.Integer.Integer"
175:10-175:15::range :: "[GHC.Types.Int]"
176:5-176:11::lq_anf$##7205759403792811420 :: "[GHC.Types.Char]"
176:10-176:11::ds_d4AK :: "GHC.Types.Int"
176:15-176:23::lq_anf$##7205759403792811422 :: "[GHC.Types.Char]"
176:27-176:45::lq_anf$##7205759403792811426 :: "[GHC.Types.Char]"
176:35-176:40::lq_anf$##7205759403792811423 :: "GHC.Num.Integer.Integer"
176:38-176:39::ds_d4AK :: "GHC.Types.Int"
176:41-176:45::lq_anf$##7205759403792811425 :: "[GHC.Types.Char]"
177:10-177:15::range :: "{v : [GHC.Types.Int] | v == range\n                       && len v >= 0}"
180:1-180:8::Data.ByteString.Builder.RealFloat.TableGenerator.case128 :: "(GHC.Types.Int -> GHC.Num.Integer.Integer) -> [GHC.Types.Int] -> [GHC.Types.Char]"
180:9-180:10::f :: "GHC.Types.Int -> GHC.Num.Integer.Integer"
180:11-180:16::range :: "[GHC.Types.Int]"
181:5-181:11::lq_anf$##7205759403792811433 :: "[GHC.Types.Char]"
181:10-181:11::ds_d4AP :: "GHC.Types.Int"
181:15-181:24::lq_anf$##7205759403792811435 :: "[GHC.Types.Char]"
181:28-181:41::lq_anf$##7205759403792811438 :: "[GHC.Types.Char]"
181:36-181:38::lq_anf$##7205759403792811436 :: "GHC.Word.Word64"
181:39-181:41::_ :: "{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0} | VV == []}"
181:45-181:51::lq_anf$##7205759403792811440 :: "[GHC.Types.Char]"
181:55-181:71::lq_anf$##7205759403792811444 :: "[GHC.Types.Char]"
181:63-181:65::lq_anf$##7205759403792811441 :: "GHC.Word.Word64"
181:66-181:71::lq_anf$##7205759403792811443 :: "[GHC.Types.Char]"
182:10-182:15::range :: "{v : [GHC.Types.Int] | v == range\n                       && len v >= 0}"
183:19-183:37::_ :: "(GHC.Word.Word64, GHC.Word.Word64)"
183:32-183:37::lq_anf$##7205759403792811432 :: "GHC.Num.Integer.Integer"
183:35-183:36::ds_d4AP :: "GHC.Types.Int"
189:1-189:10::Data.ByteString.Builder.RealFloat.TableGenerator.get_range :: "forall a .\n(GHC.Float.RealFloat<[]> a) =>\n{VV : a | false} -> {VV : ({VV : GHC.Types.Int | false}, {VV : GHC.Types.Int | false})<\\_ VV -> {VV : GHC.Types.Int | false}> | false}"
189:11-189:12::f :: "{VV : a | false}"
190:8-190:12::emin :: "{VV : GHC.Types.Int | false}"
190:14-190:18::emax :: "{VV : GHC.Types.Int | false}"
190:22-190:34::_ :: "(GHC.Types.Int, GHC.Types.Int)"
190:33-190:34::f :: "{VV : a | false}"
191:7-191:21::mantissaDigits :: "GHC.Types.Int"
191:24-191:37::_ :: "GHC.Types.Int"
191:36-191:37::f :: "{VV : a | false}"
192:7-192:12::emin' :: "GHC.Types.Int"
192:15-192:19::emin :: "{v : GHC.Types.Int | false}"
192:22-192:36::mantissaDigits :: "{v : GHC.Types.Int | v == mantissaDigits}"
192:39-192:40::lq_anf$##7205759403792811327 :: "GHC.Types.Int"
193:7-193:12::emax' :: "GHC.Types.Int"
193:15-193:19::emax :: "{v : GHC.Types.Int | false}"
193:22-193:36::mantissaDigits :: "{v : GHC.Types.Int | v == mantissaDigits}"
193:39-193:40::lq_anf$##7205759403792811330 :: "GHC.Types.Int"
194:9-194:17::lq_anf$##7205759403792811331 :: "{v : GHC.Types.Int | v == (-emin')}"
194:11-194:16::emin' :: "{v : GHC.Types.Int | v == emin'}"
194:20-194:62::lq_anf$##7205759403792811338 :: "GHC.Types.Int"
194:26-194:62::lq_anf$##7205759403792811337 :: "GHC.Types.Double"
194:27-194:46::lq_anf$##7205759403792811333 :: "GHC.Types.Double"
194:38-194:46::lq_anf$##7205759403792811332 :: "{v : GHC.Types.Int | v == (-emin')}"
194:40-194:45::emin' :: "{v : GHC.Types.Int | v == emin'}"
194:49-194:61::lq_anf$##7205759403792811336 :: "GHC.Types.Double"
194:57-194:59::lq_anf$##7205759403792811334 :: "{v : GHC.Types.Double | v == (10.0 : real)}"
194:60-194:61::lq_anf$##7205759403792811335 :: "{v : GHC.Types.Double | v == (5.0 : real)}"
195:9-195:48::lq_anf$##7205759403792811345 :: "GHC.Types.Int"
195:15-195:48::lq_anf$##7205759403792811344 :: "GHC.Types.Double"
195:16-195:32::lq_anf$##7205759403792811340 :: "GHC.Types.Double"
195:27-195:32::emax' :: "{v : GHC.Types.Int | v == emax'}"
195:35-195:47::lq_anf$##7205759403792811343 :: "GHC.Types.Double"
195:43-195:45::lq_anf$##7205759403792811341 :: "{v : GHC.Types.Double | v == (10.0 : real)}"
195:46-195:47::lq_anf$##7205759403792811342 :: "{v : GHC.Types.Double | v == (2.0 : real)}"
199:2-199:17::Data.ByteString.Builder.RealFloat.TableGenerator.float_max_split :: "GHC.Types.Int"
199:19-199:38::Data.ByteString.Builder.RealFloat.TableGenerator.float_max_inv_split :: "GHC.Types.Int"
199:42-199:72::GHC.Float.$fRealFloatFloat :: "{v : (GHC.Float.RealFloat GHC.Types.Float) | v == $fRealFloatFloat}"
199:52-199:72::lq_anf$##7205759403792811346 :: "{v : GHC.Types.Float | false}"
204:2-204:18::Data.ByteString.Builder.RealFloat.TableGenerator.double_max_split :: "GHC.Types.Int"
204:20-204:40::Data.ByteString.Builder.RealFloat.TableGenerator.double_max_inv_split :: "GHC.Types.Int"
205:10-205:11::m :: "{VV : GHC.Types.Int | false}"
205:13-205:15::mi :: "{VV : GHC.Types.Int | false}"
205:19-205:50::_ :: "{v : ({v : GHC.Types.Int | false}, {v : GHC.Types.Int | false})<\\_ VV -> {v : GHC.Types.Int | false}> | false}"
205:29-205:50::lq_anf$##7205759403792811366 :: "{v : GHC.Types.Double | false}"
206:10-206:11::m :: "{v : GHC.Types.Int | false}"
206:14-206:15::lq_anf$##7205759403792811368 :: "GHC.Types.Int"
206:17-206:19::mi :: "{v : GHC.Types.Int | false}"