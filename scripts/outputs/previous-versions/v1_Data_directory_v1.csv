Data/ByteString.hs,"['singleton', 'allBytes', 'pack', 'unpack', 'unpackFoldr', 'fromFilePath', 'toFilePath', 'null', 'length', 'cons', 'snoc', 'head', 'tail', 'uncons', 'last', 'init', 'unsnoc', 'append', 'map', 'reverse', 'intersperse', 'transpose', 'foldl', ""foldl'"", 'foldr', ""foldr'"", 'foldl1', ""foldl1'"", 'foldr1', ""foldr1'"", 'concat', 'concatMap', 'any', 'anyByte', 'all', 'maximum', 'minimum', 'mapAccumL', 'mapAccumR', 'scanl', 'scanl1', 'scanr', 'scanr1', 'replicate', 'unfoldr', 'unfoldrN', 'take', 'takeEnd', 'drop', 'dropEnd', 'splitAt', 'takeWhile', 'takeWhileEnd', 'dropWhile', 'dropWhileEnd', 'break', 'breakByte', 'breakEnd', 'span', 'spanByte', 'spanEnd', 'splitWith', 'split', 'group', 'groupBy', 'intercalate', 'index', 'indexMaybe', '(!?)', 'elemIndex', 'elemIndexEnd', 'elemIndices', 'count', 'findIndex', 'findIndexEnd', 'findIndices', 'elem', 'notElem', 'filter', 'filterByte', 'find', 'partition', 'isPrefixOf', 'stripPrefix', 'isSuffixOf', 'stripSuffix', 'isInfixOf', 'isValidUtf8', 'breakSubstring', 'zip', 'zipWith', 'packZipWith', 'unzip', 'inits', 'initsNE', 'tails', 'tailsNE', 'sort', 'useAsCString', 'useAsCStringLen', 'packCString', 'packCStringLen', 'copy', 'getLine', 'hGetLine', 'mkPS', 'mkBigPS', 'hPut', 'hPutNonBlocking', 'hPutStr', 'putStr', 'hGet', 'hGetNonBlocking', 'hGetSome', 'illegalBufferSize', 'hGetContents', 'hGetContentsSizeHint', 'getContents', 'interact', 'readFile', 'modifyFile', 'writeFile', 'appendFile', 'errorEmptyList', 'moduleError', 'moduleErrorIO', 'moduleErrorMsg', 'findFromEndUntil']"
Data/LiquidPtr.hs,"['fst3', 'snd3', 'myMin', 'myMax', 'newForeignPtr_', 'withForeignPtr', 'peekByteOff', 'peekElemOff', 'pokeByteOff', 'pokeElemOff', 'peek', 'poke', 'nullPtr', 'castPtr', 'plusPtr', 'minusPtr', 'mkPtr', 'plusForeignPtr', 'allocaBytes', 'unsafeForeignPtrToPtr', 'unsafeError']"
Data/ByteString/Unsafe.hs,"['unsafeHead', 'unsafeTail', 'unsafeInit', 'unsafeLast', 'unsafeIndex', 'unsafeTake', 'unsafeDrop', 'unsafePackAddressLen', 'unsafePackCStringFinalizer', 'unsafeFinalize', 'unsafePackCString', 'unsafePackCStringLen', 'unsafePackMallocCString', 'unsafePackMallocCStringLen', 'unsafeUseAsCString', 'unsafeUseAsCStringLen']"
Data/ByteString/ReadNat.hs,[]
Data/ByteString/Char8.hs,"['singleton', 'pack', 'unpack', 'cons', 'snoc', 'uncons', 'unsnoc', 'head', 'last', 'map', 'intersperse', 'foldl', ""foldl'"", 'foldr', ""foldr'"", 'foldl1', ""foldl1'"", 'foldr1', ""foldr1'"", 'concatMap', 'any', 'all', 'maximum', 'minimum', 'mapAccumL', 'mapAccumR', 'scanl', 'scanl1', 'scanr', 'scanr1', 'replicate', 'unfoldr', 'unfoldrN', 'takeWhile', 'takeWhileEnd', 'dropWhile', 'dropWhileEnd', 'break', 'breakChar', 'span', 'spanEnd', 'breakEnd', 'split', 'splitWith', 'tokens', 'groupBy', 'index', 'indexMaybe', '(!?)', 'elemIndex', 'elemIndexEnd', 'elemIndices', 'findIndex', 'findIndexEnd', 'findIndices', 'count', 'elem', 'notElem', 'filter', 'partition', 'filterChar', 'find', 'filterChar', 'filterNotChar', 'zip', 'zipWith', 'packZipWith', 'unzip', 'breakSpace', 'firstspace', 'dropSpace', 'firstnonspace', 'strip', 'dropSpaceEnd', 'lastnonspace', 'lines', 'unlines', 'words', 'unwords', 'getLine', 'hGetLine', 'hPutStrLn', 'putStrLn']"
Data/ByteString/Builder.hs,"['encodeUtf8CSV', 'renderTable', 'renderRow', 'renderCell', 'renderString', 'strings', 'table', '>maxiTable', '>main', '>renderRow', '>renderString', 'toLazyByteString', 'hPutBuilder', 'modifyFile', 'writeFile', 'int8', 'word8', 'int16LE', 'int32LE', 'int64LE', 'word16LE', 'word32LE', 'word64LE', 'floatLE', 'doubleLE', 'int16BE', 'int32BE', 'int64BE', 'word16BE', 'word32BE', 'word64BE', 'floatBE', 'doubleBE', 'char7', 'string7', 'char8', 'string8', 'charUtf8', 'stringUtf8']"
Data/ByteString/Lazy.hs,"['empty', 'singleton', 'pack', 'unpack', 'fromChunks', 'toChunks', 'packWith', 'unpackWith', 'null', 'length', 'cons', ""cons'"", 'snoc', 'head', 'uncons', 'tail', 'last', 'init', 'unsnoc', 'append', 'map', 'reverse', 'intersperse', 'transpose', 'foldl', ""foldl'"", 'foldr', ""foldr'"", 'foldl1', ""foldl1'"", 'foldr1', ""foldr1'"", 'concat', 'concatMap', 'any', 'all', 'maximum', 'minimum', 'compareLength', 'mapAccumL', 'mapAccumR', 'scanl', 'scanl1', 'scanr', 'scanr1', 'iterate', 'repeat', 'replicate', 'cycle', 'unfoldr', 'take', 'takeEnd', 'splitAtEndFold', 'splitAtEndFoldInvariantFailed', 'drop', 'dropEnd', 'splitAt', 'takeWhile', 'takeWhileEnd', 'dropWhile', 'dropWhileEnd', 'break', 'breakEnd', 'breakByte', 'spanByte', 'span', 'spanEnd', 'splitWith', 'split', 'group', 'groupBy', 'intercalate', 'index', 'indexMaybe', '(!?)', 'elemIndex', 'elemIndexEnd', 'elemIndices', 'count', 'findIndex', 'findIndexEnd', 'find', 'findIndices', 'elem', 'notElem', 'filter', 'filterByte', 'filterNotByte', 'partition', 'isPrefixOf', 'stripPrefix', 'isSuffixOf', 'stripSuffix', 'zip', 'zipWith', 'packZipWith', 'unzip', 'inits', 'initsNE', 'tails', 'tailsNE', 'copy', 'hGetContentsN', 'hGetN', 'hGetNonBlockingN', 'illegalBufferSize', 'hGetContents', 'hGet', 'hGetNonBlocking', 'readFile', 'modifyFile', 'writeFile', 'appendFile', 'getContents', 'hPut', 'hPutNonBlocking', 'hPutStr', 'putStr', 'interact', 'errorEmptyList', 'moduleError', 'revNonEmptyChunks', 'revChunks', 'intToInt64']"
Data/ByteString/Short.hs,[]
Data/ByteString/ReadInt.hs,[]
Data/ByteString/Internal.hs,[]
Data/ByteString/Short/Internal.hs,"['empty', 'length', 'null', 'index', 'indexMaybe', '(!?)', 'unsafeIndex', 'indexError', 'asBA', 'unSBS', 'create', 'createAndTrim', ""createAndTrim'"", 'createAndTrim2', 'isPinned', 'toShort', 'toShortIO', 'fromShort', 'singleton', 'pack', 'unpack', 'unpackFoldr', 'packChars', 'packBytes', 'packLenBytes', 'unpackChars', 'unpackBytes', 'unpackAppendCharsLazy', 'unpackAppendBytesLazy', 'unpackAppendCharsStrict', 'unpackAppendBytesStrict', 'compareBytes', 'append', 'concat', 'snoc', 'cons', 'last', 'tail', 'uncons', 'head', 'init', 'unsnoc', 'map', 'reverse', 'intercalate', 'foldl', ""foldl'"", 'foldr', ""foldr'"", 'foldl1', ""foldl1'"", 'foldr1', ""foldr1'"", 'all', 'any', 'take', 'takeWhile', 'takeEnd', 'takeWhileEnd', 'drop', 'dropEnd', 'dropWhile', 'dropWhileEnd', 'breakEnd', 'break', 'span', 'spanEnd', 'splitAt', 'split', 'splitWith', 'stripSuffix', 'stripPrefix', 'replicate', 'unfoldr', 'unfoldrN', 'isInfixOf', 'isPrefixOf', 'isSuffixOf', 'breakSubstring', 'elem', 'filter', 'find', 'partition', 'elemIndex', 'elemIndices', 'count', 'findIndex', 'findIndices', 'copyToPtr', 'createFromPtr', 'indexCharArray', 'indexWord8Array', 'indexWord8ArrayAsWord64', 'newByteArray', 'unsafeFreezeByteArray', 'writeWord8Array', 'writeWord64Array', 'copyAddrToByteArray', 'copyByteArrayToAddr', 'copyByteArray', 'setByteArray', 'copyMutableByteArray', 'compareByteArrays', 'compareByteArraysOff', 'copyAddrToByteArray#', 'copyByteArrayToAddr#', 'copyByteArray#', 'packCString', 'packCStringLen', 'useAsCString', 'useAsCStringLen', 'isValidUtf8', 'moduleErrorIO', 'moduleErrorMsg', 'findFromEndUntil', 'findIndexOrLength', 'packBytesRev', 'packLenBytesRev', 'breakByte', 'errorEmptySBS', 'moduleError']"
Data/ByteString/Internal/Type.hs,"['unsafeWithForeignPtr', 'plusForeignPtr', 'minusForeignPtr', 'peekFp', 'pokeFp', 'peekFpByteOff', 'pokeFpByteOff', 'deferForeignPtrAvailability', 'mkDeferredByteString', 'unsafeDupablePerformIO', 'packConstr', 'byteStringDataType', 'findIndexOrLength', 'packBytes', 'packChars', 'unsafePackLenBytes', 'unsafePackLenChars', 'unsafePackAddress', 'unsafePackLenAddress', 'unsafePackLiteral', 'unsafePackLenLiteral', 'packUptoLenBytes', 'packUptoLenChars', 'unpackBytes', 'unpackChars', 'unpackAppendBytesLazy', 'unpackAppendCharsLazy', 'unpackAppendBytesStrict', 'unpackAppendCharsStrict', 'nullForeignPtr', 'fromForeignPtr', 'fromForeignPtr0', 'toForeignPtr', 'toForeignPtr0', 'unsafeCreateFp', 'unsafeCreateFpUptoN', ""unsafeCreateFpUptoN'"", 'createFp', 'createFpUptoN', ""createFpUptoN'"", 'createFpAndTrim', ""createFpAndTrim'"", 'wrapAction', 'unsafeCreate', 'unsafeCreateUptoN', ""unsafeCreateUptoN'"", 'create', 'createUptoN', ""createUptoN'"", 'createAndTrim', ""createAndTrim'"", 'mallocByteString', 'eq', 'compareBytes', 'empty', 'append', 'concat', 'stimesPolymorphic', 'stimesNegativeErr', 'stimesOverflowErr', 'stimesNonNegativeInt', 'w2c', 'c2w', 'isSpaceWord8', 'isSpaceChar8', 'overflowError', 'checkedAdd', 'checkedMultiply', 'checkedIntegerToInt', 'accursedUnutterablePerformIO', 'memchr', 'memcmp', 'memset', 'c_strlen', 'memcpyFp', 'c_free_finalizer', 'c_reverse', 'c_intersperse', 'c_maximum', 'c_minimum', 'c_count', 'c_count_ba', 'c_sort', 'c_elem_index', 'c_uint_dec', 'c_long_long_uint_dec', 'c_int_dec', 'c_long_long_int_dec', 'c_uint_hex', 'c_long_long_uint_hex', 'c_int_dec_padded9', 'c_long_long_int_dec_padded18', 'cIsValidUtf8', 'cIsValidUtf8BA', 'cIsValidUtf8BASafe', 'cIsValidUtf8Safe', 'c_reverse', 'c_maximum', 'c_minimum', 'c_count', 'c_count_ba', 'c_intersperse', 'c_sort', 'c_elem_index', 'cIsValidUtf8BA', 'cIsValidUtf8', 'cIsValidUtf8BASafe', 'cIsValidUtf8Safe', 'bool_to_cint', 'checkedCast', 'c_int_dec', 'c_long_long_int_dec', 'c_uint_dec', 'c_long_long_uint_dec', 'c_uint_hex', 'c_long_long_uint_hex', 'c_int_dec_padded9', 'c_long_long_int_dec_padded18']"
Data/ByteString/Internal/Pure.hs,"['strlen', 'memchr', 'memcmp', 'memcmp1', 'intersperse', 'countOccBA', 'countOcc', 'elemIndex', 'reverseBytes', 'reverse_bytes', 'findMaximum', 'find_maximum', 'findMinimum', 'find_minimum', 'quickSort', 'quick_sort', 'partition', 'isValidUtf8BA', 'isValidUtf8', ""isValidUtf8'"", 'getDigit', 'putDigit', 'reverseBytesInplace', 'encodeSignedDec', 'encodeUnsignedDec', ""encodeUnsignedDec'"", 'encodeUnsignedDecPadded', 'encodeUnsignedHex', ""encodeUnsignedHex'"", 'lower_hex_table', 'digit_pairs_table']"
Data/ByteString/Utils/ByteOrder.hs,"['hostByteOrder', 'whenLittleEndian', 'whenBigEndian']"
Data/ByteString/Utils/UnalignedAccess.hs,"['unalignedWriteU16', 'unalignedWriteU32', 'unalignedWriteU64', 'unalignedWriteFloat', 'unalignedWriteDouble', 'unalignedReadU64', 'unalignedWriteU16', 'unalignedWriteU32', 'unalignedWriteU64', 'unalignedWriteFloat', 'unalignedWriteDouble', 'unalignedReadU64', 'unalignedWriteU16', 'unalignedWriteU32', 'unalignedWriteU64', 'unalignedWriteFloat', 'unalignedWriteDouble', 'unalignedReadU64']"
Data/ByteString/Lazy/ReadNat.hs,"['readInteger', 'readNatural', '_readDecimal', 'natdigits', 'safeLog', 'safeBase', 'fromDigit', 'wordToNatural']"
Data/ByteString/Lazy/Char8.hs,"['singleton', 'pack', 'unpack', 'cons', ""cons'"", 'snoc', 'head', 'uncons', 'unsnoc', 'last', 'map', 'intersperse', 'foldl', ""foldl'"", 'foldr', ""foldr'"", 'foldl1', ""foldl1'"", 'foldr1', ""foldr1'"", 'concatMap', 'any', 'all', 'maximum', 'minimum', 'scanl', 'scanl1', 'scanr', 'scanr1', 'mapAccumL', 'mapAccumR', 'iterate', 'repeat', 'replicate', 'unfoldr', 'takeWhile', 'takeWhileEnd', 'dropWhile', 'dropWhileEnd', 'break', 'breakEnd', 'span', 'spanEnd', 'breakChar', 'spanChar', 'split', 'splitWith', 'groupBy', 'index', 'indexMaybe', '(!?)', 'elemIndex', 'elemIndexEnd', 'elemIndices', 'findIndex', 'findIndexEnd', 'findIndices', 'count', 'elem', 'notElem', 'filter', 'partition', 'filterChar', 'find', 'filterChar', 'filterNotChar', 'zip', 'zipWith', 'packZipWith', 'unzip', 'lines', 'unlines', 'words', 'unwords', 'hPutStrLn', 'putStrLn']"
Data/ByteString/Lazy/ReadInt.hs,"['readInt', 'readInt32', 'readInt16', 'readInt8', 'readWord', 'readWord32', 'readWord16', 'readWord8', 'readInt64', 'readWord64', '_read', '_readDecimal', '_digits', 'fromDigit']"
Data/ByteString/Lazy/Internal.hs,"['packConstr', 'byteStringDataType', 'packBytes', 'packChars', 'unpackBytes', 'unpackChars', 'invariant', 'checkInvariant', 'chunk', 'foldrChunks', 'foldlChunks', 'defaultChunkSize', 'smallChunkSize', 'chunkOverhead', 'eq', 'cmp', 'append', 'concat', 'times', 'fromStrict', 'toStrict']"
Data/ByteString/Builder/RealFloat.hs,"['floatDec', 'doubleDec', 'standard', 'standardDefaultPrecision', 'scientific', 'generic', 'formatFloat', 'formatDouble', 'char7', 'string7', 'sign', 'specialStr', 'digits', 'showStandard']"
Data/ByteString/Builder/Internal.hs,"['bufferSize', 'newBuffer', 'byteStringFromBuffer', 'trimmedChunkFromBuffer', 'yield1', 'ciosUnitToLazyByteString', 'ciosToLazyByteString', 'done', 'bufferFull', 'insertChunk', 'fillWithBuildStep', 'builder', 'finalBuildStep', 'runBuilder', 'runBuilderWith', 'empty', 'append', 'stimesBuilder', 'stimesNegativeErr', 'flush', 'put', 'runPut', 'ap_l', 'ap_r', 'putBuilder', 'fromPut', 'putLiftIO', 'hPut', 'putToLazyByteString', 'putToLazyByteStringWith', 'ensureFree', 'wrappedBytesCopyStep', 'byteStringThreshold', 'byteStringCopy', 'byteStringCopyStep', 'byteStringInsert', 'shortByteString', 'shortByteStringCopyStep', 'lazyByteStringThreshold', 'lazyByteStringCopy', 'lazyByteStringInsert', 'byteString', 'lazyByteString', 'maximalCopySize', 'customStrategy', 'sanitize', 'untrimmedStrategy', 'safeStrategy', 'toLazyByteStringWith', 'buildStepToCIOS']"
Data/ByteString/Builder/Extra.hs,"['runBuilder', 'intHost', 'int16Host', 'int32Host', 'int64Host', 'wordHost', 'word16Host', 'word32Host', 'word64Host', 'floatHost', 'doubleHost']"
Data/ByteString/Builder/ASCII.hs,"['int8Dec', 'int16Dec', 'int32Dec', 'int64Dec', 'intDec', 'word8Dec', 'word16Dec', 'word32Dec', 'word64Dec', 'wordDec', 'word8Hex', 'word16Hex', 'word32Hex', 'word64Hex', 'wordHex', 'int8HexFixed', 'int16HexFixed', 'int32HexFixed', 'int64HexFixed', 'word8HexFixed', 'word16HexFixed', 'word32HexFixed', 'word64HexFixed', 'floatHexFixed', 'doubleHexFixed', 'byteStringHex', 'lazyByteStringHex', 'maxPow10', 'integerDec', 'intDecPadded']"
Data/ByteString/Builder/Prim.hs,"['renderCell', 'renderString', 'renderString', 'maxiStrings', 'charUtf8HtmlEscaped', 'primFixed', 'primMapListFixed', 'primUnfoldrFixed', 'primMapByteStringFixed', 'primMapLazyByteStringFixed', 'primBounded', 'primMapListBounded', 'primUnfoldrBounded', 'primMapByteStringBounded', 'primMapLazyByteStringBounded', 'cstring', 'cstringUtf8', 'char8', 'charUtf8', 'encodeCharUtf8']"
Data/ByteString/Builder/RealFloat/TableGenerator.hs,"['float_pow5_inv_bitcount', 'float_pow5_bitcount', 'double_pow5_bitcount', 'double_pow5_inv_bitcount', 'blen', 'finv', 'fnorm', 'splitWord128s', 'splitWord128', 'case64', 'case128', 'get_range', 'float_max_split', 'float_max_inv_split', 'double_max_split', 'double_max_inv_split']"
Data/ByteString/Builder/RealFloat/D2S.hs,"['double_mantissa_bits', 'double_exponent_bits', 'double_bias', 'd2dSmallInt', 'unifySmallTrailing', 'mulShift64', 'get_double_pow5_inv_split', 'get_double_pow5_split', 'mulPow5DivPow2', 'mulPow5InvDivPow2', 'd2dGT', 'd2dLT', 'd2d', 'breakdown', ""d2s'"", 'd2s', 'd2Intermediate']"
Data/ByteString/Builder/RealFloat/F2S.hs,"['float_mantissa_bits', 'float_exponent_bits', 'float_bias', 'mulShift32', 'get_float_pow5_inv_split', 'get_float_pow5_split', 'mulPow5InvDivPow2', 'mulPow5DivPow2', 'f2dGT', 'f2dLT', 'f2d', 'breakdown', ""f2s'"", 'f2s', 'f2Intermediate']"
Data/ByteString/Builder/RealFloat/Internal.hs,"['mask', 'boolToWord32', 'boolToWord64', 'int32ToInt', 'intToInt32', 'word32ToInt', 'word64ToInt', 'word32ToWord64', 'word64ToWord32', 'decimalLength9', 'decimalLength17', 'maxEncodedLength', 'pokeAll', 'boundString', 'toCharsNonNumbersAndZero', 'acceptBounds', 'pow5bitsUnboxed', 'log10pow2Unboxed', 'log10pow5Unboxed', 'fquot10', 'frem10', 'fquotRem10', 'fquot100', 'fquotRem10000', 'fquot5', 'frem5', 'dquot10', 'dquot100', 'dquotRem10000', 'dquotRem10', 'dquot5', 'drem5', 'dquotRem5', 'wrapped', 'packWord64', 'unpackWord64', 'plusWord64', 'timesWord2', 'pow5_factor', 'multipleOfPowerOf5', 'multipleOfPowerOf2', 'trimTrailing', 'trimNoTrailing', 'closestCorrectlyRounded', 'asciiRaw', 'asciiZero', 'asciiDot', 'asciiMinus', 'ascii_e', 'toAscii', 'getWord64At', 'getWord128At', 'packWord16', 'unpackWord16', 'digit_table', 'unsafeAt', 'copyWord16', 'poke', 'writeMantissa', 'writeExponent', 'writeSign', 'toCharsScientific']"
Data/ByteString/Builder/Prim/Internal.hs,"['(>$<)', '(>*<)', 'fixedPrim', 'size', 'runF', 'emptyF', 'pairF', 'contramapF', 'toB', 'liftFixedToBounded', 'storableToF', 'liftIOF', 'sizeBound', 'boundedPrim', 'runB', 'contramapB', 'emptyB', 'pairB', 'eitherB', 'condB']"
Data/ByteString/Builder/Prim/Binary.hs,"['word8', 'word16BE', 'word16LE', 'word32BE', 'word32LE', 'word64BE', 'word64LE', 'wordHost', 'word16Host', 'word32Host', 'word64Host', 'int8', 'int16BE', 'int16LE', 'int32BE', 'int32LE', 'int64BE', 'int64LE', 'intHost', 'int16Host', 'int32Host', 'int64Host', 'floatBE', 'floatLE', 'doubleBE', 'doubleLE', 'floatHost', 'doubleHost']"
Data/ByteString/Builder/Prim/ASCII.hs,"['char7', 'encodeIntDecimal', 'int8Dec', 'int16Dec', 'int32Dec', 'int64Dec', 'intDec', 'encodeWordDecimal', 'word8Dec', 'word16Dec', 'word32Dec', 'word64Dec', 'wordDec', 'encodeWordHex', 'word8Hex', 'word16Hex', 'word32Hex', 'word64Hex', 'wordHex', 'word8HexFixed', 'word16HexFixed', 'word32HexFixed', 'word64HexFixed', 'int8HexFixed', 'int16HexFixed', 'int32HexFixed', 'int64HexFixed', 'floatHexFixed', 'doubleHexFixed']"
Data/ByteString/Builder/Prim/Internal/Base16.hs,"['lowerTable', 'c_lower_hex_table', 'encode8_as_16h']"
Data/ByteString/Builder/Prim/Internal/UncheckedShifts.hs,"['shiftr_w16', 'shiftr_w32', 'shiftr_w64', 'shiftr_w', 'caseWordSize_32_64']"
Data/ByteString/Builder/Prim/Internal/Floating.hs,"['encodeFloatViaWord32F', 'encodeDoubleViaWord64F']"
